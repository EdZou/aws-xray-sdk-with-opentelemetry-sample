version: '3.8'
services:
  dynamodb:
    image: amazon/dynamodb-local
    command: -jar DynamoDBLocal.jar -inMemory -sharedDb
    ports:
      - '8000:8000'
  dynamodb-table:
    image: amazon/aws-cli
    command: |
      dynamodb create-table
        --table-name scratch
        --attribute-definitions AttributeName=id,AttributeType=S
        --key-schema AttributeName=id,KeyType=HASH
        --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5
        --endpoint-url http://dynamodb:8000
    environment:
      - AWS_ACCESS_KEY_ID=dummy
      - AWS_SECRET_ACCESS_KEY=dummy
      - AWS_REGION=dummy
    depends_on:
      - dynamodb
  otel:
    #build:
      #context: https://github.com/anuraaga/opentelemetry-collector-contrib.git#custom
    image: otel/opentelemetry-collector-contrib:master
    command: --config /config/collector-config.yml
    environment:
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - AWS_REGION
    ports:
      - '9100:9100'
    volumes:
      - ./otel:/config
      - ~/.aws:/root/.aws
  xray:
    image: amazon/aws-xray-daemon:3.2.0
    command: -o
    environment:
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - AWS_REGION
    ports:
      - '2000:2000/udp'
    volumes:
      - ~/.aws:/root/.aws
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    environment:
      - OTLP_ENDPOINT=otel:9100
      - AWS_XRAY_DAEMON_ADDRESS=xray:2000
    ports:
      - '8081:8081'
  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    environment:
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - AWS_REGION
      - HELLO_SERVICE_ENDPOINT=backend:8081
      - OTLP_ENDPOINT=otel:9100
      - AWS_XRAY_DAEMON_ADDRESS=xray:2000
      - DYNAMODB_ENDPOINT=dynamodb:8000
    ports:
      - '8080:8080'
    volumes:
      - ~/.aws:/root/.aws
    depends_on:
      - backend
      - otel
      - xray
      - dynamodb-table

