/*
 * This file is generated by jOOQ.
 */
package com.softwareaws.xray.examples.appdb.tables.daos;


import com.softwareaws.xray.examples.appdb.tables.Planet;
import com.softwareaws.xray.examples.appdb.tables.records.PlanetRecord;

import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlanetDao extends DAOImpl<PlanetRecord, com.softwareaws.xray.examples.appdb.tables.pojos.Planet, UInteger> {

    /**
     * Create a new PlanetDao without any configuration
     */
    public PlanetDao() {
        super(Planet.PLANET, com.softwareaws.xray.examples.appdb.tables.pojos.Planet.class);
    }

    /**
     * Create a new PlanetDao with an attached configuration
     */
    public PlanetDao(Configuration configuration) {
        super(Planet.PLANET, com.softwareaws.xray.examples.appdb.tables.pojos.Planet.class, configuration);
    }

    @Override
    public UInteger getId(com.softwareaws.xray.examples.appdb.tables.pojos.Planet object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.softwareaws.xray.examples.appdb.tables.pojos.Planet> fetchRangeOfId(UInteger lowerInclusive, UInteger upperInclusive) {
        return fetchRange(Planet.PLANET.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.softwareaws.xray.examples.appdb.tables.pojos.Planet> fetchById(UInteger... values) {
        return fetch(Planet.PLANET.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.softwareaws.xray.examples.appdb.tables.pojos.Planet fetchOneById(UInteger value) {
        return fetchOne(Planet.PLANET.ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.softwareaws.xray.examples.appdb.tables.pojos.Planet> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Planet.PLANET.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.softwareaws.xray.examples.appdb.tables.pojos.Planet> fetchByName(String... values) {
        return fetch(Planet.PLANET.NAME, values);
    }
}
